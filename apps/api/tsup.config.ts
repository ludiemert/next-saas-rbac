import { defineConfig } from "tsup";

export default defineConfig({
	entry: [
		"src/client.http",
		"src",
		"src/index.ts",
		"src/http/error-handler.ts",
		"src/http/server.ts",
		"src/lib/prisma.ts",
		"src/utils/create-slug.ts",
		"src/utils/get-user-permissions.ts",
		"src/http/middlewares/auth.ts",
		"src/http/routes/billing/get-organization-billing.ts",
		"src/http/routes/auth/authenticate-with-github.ts",
		"src/http/routes/auth/authenticate-with-password.ts",
		"src/http/routes/auth/create-account.ts",
		"src/http/routes/auth/get-profile.ts",
		"src/http/routes/auth/request-password-recover.ts",
		"src/http/routes/auth/reset-password.ts",
		"src/http/routes/invites/accept-invite.ts",
		"src/http/routes/invites/create-invite.ts",
		"src/http/routes/invites/get-invite.ts",
		"src/http/routes/invites/get-invites.ts",
		"src/http/routes/invites/get-pending-invites.ts",
		"src/http/routes/invites/reject-invite.ts",
		"src/http/routes/invites/revoke-invite.ts",
		"src/http/routes/members/get-members.ts",
		"src/http/routes/members/remove-member.ts",
		"src/http/routes/members/update-member.ts",
		"src/http/routes/orgs/create-organization.ts",
		"src/http/routes/orgs/get-membership.ts",
		"src/http/routes/orgs/get-organization.ts",
		"src/http/routes/orgs/get-organizations.ts",
		"src/http/routes/orgs/shutdown-organization.ts",
		"src/http/routes/orgs/transfer-organization.ts",
		"src/http/routes/orgs/update-organization.ts",
		"src/http/routes/projects/create-project.ts",
		"src/http/routes/projects/delete-project.ts",
		"src/http/routes/projects/get-project.ts",
		"src/http/routes/projects/get-projects.ts",
		"src/http/routes/projects/update-project.ts",
		"src/http/routes/_errors/bad-request-error.ts",
		"src/http/routes/_errors/unauthorized-error.ts",
		"src/index.ts",
	],
	loader: {
		".http": "text", // Define arquivos `.http` para serem carregados como texto
	},
	target: "es2022",

	splitting: false,
	sourcemap: true,
	clean: true,

	noExternal: ["@saas/auth", "@saas/env"],
});
